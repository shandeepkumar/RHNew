package gov.bnm.rh.views;

import java.sql.Timestamp;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 23 15:47:10 SGT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AuditTrailsViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        auditId {
            public Object get(AuditTrailsViewRowImpl obj) {
                return obj.getauditId();
            }

            public void put(AuditTrailsViewRowImpl obj, Object value) {
                obj.setauditId((String)value);
            }
        }
        ,
        usrId {
            public Object get(AuditTrailsViewRowImpl obj) {
                return obj.getusrId();
            }

            public void put(AuditTrailsViewRowImpl obj, Object value) {
                obj.setusrId((String)value);
            }
        }
        ,
        actionDate {
            public Object get(AuditTrailsViewRowImpl obj) {
                return obj.getactionDate();
            }

            public void put(AuditTrailsViewRowImpl obj, Object value) {
                obj.setactionDate((Timestamp)value);
            }
        }
        ,
        documentId {
            public Object get(AuditTrailsViewRowImpl obj) {
                return obj.getdocumentId();
            }

            public void put(AuditTrailsViewRowImpl obj, Object value) {
                obj.setdocumentId((String)value);
            }
        }
        ,
        actionTaken {
            public Object get(AuditTrailsViewRowImpl obj) {
                return obj.getactionTaken();
            }

            public void put(AuditTrailsViewRowImpl obj, Object value) {
                obj.setactionTaken((String)value);
            }
        }
        ,
        notes {
            public Object get(AuditTrailsViewRowImpl obj) {
                return obj.getnotes();
            }

            public void put(AuditTrailsViewRowImpl obj, Object value) {
                obj.setnotes((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(AuditTrailsViewRowImpl object);

        public abstract void put(AuditTrailsViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int AUDITID = AttributesEnum.auditId.index();
    public static final int USRID = AttributesEnum.usrId.index();
    public static final int ACTIONDATE = AttributesEnum.actionDate.index();
    public static final int DOCUMENTID = AttributesEnum.documentId.index();
    public static final int ACTIONTAKEN = AttributesEnum.actionTaken.index();
    public static final int NOTES = AttributesEnum.notes.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AuditTrailsViewRowImpl() {
    }

    /**
     * Gets AuditTrails entity object.
     * @return the AuditTrails
     */
    public EntityImpl getAuditTrails() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for auditId using the alias name auditId.
     * @return the auditId
     */
    public String getauditId() {
        return (String) getAttributeInternal(AUDITID);
    }

    /**
     * Sets <code>value</code> as attribute value for auditId using the alias name auditId.
     * @param value value to set the auditId
     */
    public void setauditId(String value) {
        setAttributeInternal(AUDITID, value);
    }

    /**
     * Gets the attribute value for usrId using the alias name usrId.
     * @return the usrId
     */
    public String getusrId() {
        return (String) getAttributeInternal(USRID);
    }

    /**
     * Sets <code>value</code> as attribute value for usrId using the alias name usrId.
     * @param value value to set the usrId
     */
    public void setusrId(String value) {
        setAttributeInternal(USRID, value);
    }

    /**
     * Gets the attribute value for actionDate using the alias name actionDate.
     * @return the actionDate
     */
    public Timestamp getactionDate() {
        return (Timestamp) getAttributeInternal(ACTIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for actionDate using the alias name actionDate.
     * @param value value to set the actionDate
     */
    public void setactionDate(Timestamp value) {
        setAttributeInternal(ACTIONDATE, value);
    }

    /**
     * Gets the attribute value for documentId using the alias name documentId.
     * @return the documentId
     */
    public String getdocumentId() {
        return (String) getAttributeInternal(DOCUMENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for documentId using the alias name documentId.
     * @param value value to set the documentId
     */
    public void setdocumentId(String value) {
        setAttributeInternal(DOCUMENTID, value);
    }

    /**
     * Gets the attribute value for actionTaken using the alias name actionTaken.
     * @return the actionTaken
     */
    public String getactionTaken() {
        return (String) getAttributeInternal(ACTIONTAKEN);
    }

    /**
     * Sets <code>value</code> as attribute value for actionTaken using the alias name actionTaken.
     * @param value value to set the actionTaken
     */
    public void setactionTaken(String value) {
        setAttributeInternal(ACTIONTAKEN, value);
    }

    /**
     * Gets the attribute value for notes using the alias name notes.
     * @return the notes
     */
    public String getnotes() {
        return (String) getAttributeInternal(NOTES);
    }

    /**
     * Sets <code>value</code> as attribute value for notes using the alias name notes.
     * @param value value to set the notes
     */
    public void setnotes(String value) {
        setAttributeInternal(NOTES, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
