package gov.bnm.rh.views;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon May 19 02:34:23 GMT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RequestlistViewRowImpl extends ViewRowImpl {
  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
   */
  public enum AttributesEnum {
    requestId {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getrequestId();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setrequestId((String)value);
      }
    }
    ,
    itemId {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getitemId();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setitemId((String)value);
      }
    }
    ,
    typeOfReqId {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.gettypeOfReqId();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.settypeOfReqId((String)value);
      }
    }
    ,
    typeOfReqName {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.gettypeOfReqName();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.settypeOfReqName((String)value);
      }
    }
    ,
    typeOfReq {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.gettypeOfReq();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.settypeOfReq((String)value);
      }
    }
    ,
    requestorId {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getrequestorId();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setrequestorId((String)value);
      }
    }
    ,
    approverId {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getapproverId();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setapproverId((String)value);
      }
    }
    ,
    reasonForRequest {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getreasonForRequest();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setreasonForRequest((String)value);
      }
    }
    ,
    reasonForRejection {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getreasonForRejection();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setreasonForRejection((String)value);
      }
    }
    ,
    status {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getstatus();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setstatus((String)value);
      }
    }
    ,
    createDate {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getcreateDate();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setcreateDate((Timestamp)value);
      }
    }
    ,
    updateDate {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getupdateDate();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setupdateDate((Timestamp)value);
      }
    }
    ,
    Designation {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getDesignation();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setDesignation((String)value);
      }
    }
    ,
    RequestDays {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getRequestDays();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setRequestDays((Integer)value);
      }
    }
    ,
    statusOrder {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getstatusOrder();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setstatusOrder((String)value);
      }
    }
    ,
    GuidelineTitle {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getGuidelineTitle();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setGuidelineTitle((String)value);
      }
    }
    ,
    RefNum {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getRefNum();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setRefNum((String)value);
      }
    }
    ,
    RequestorName {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getRequestorName();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setRequestorName((String)value);
      }
    }
    ,
    RequestorDepartmentId {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getRequestorDepartmentId();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setRequestorDepartmentId((String)value);
      }
    }
    ,
    RequestorDepartmentName {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getRequestorDepartmentName();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setRequestorDepartmentName((String)value);
      }
    }
    ,
    suppDocfilenameOrig {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getsuppDocfilenameOrig();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setsuppDocfilenameOrig((String)value);
      }
    }
    ,
    suppDocfilenameStore {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getsuppDocfilenameStore();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setsuppDocfilenameStore((String)value);
      }
    }
    ,
    DesignationName {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getDesignationName();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setDesignationName((String)value);
      }
    }
    ,
    PolicyView {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getPolicyView();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    InternaluserView {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getInternaluserView();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    AttachedfileView {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getAttachedfileView();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    LookuppropertiesView {
      public Object get(RequestlistViewRowImpl obj) {
        return obj.getLookuppropertiesView();
      }

      public void put(RequestlistViewRowImpl obj, Object value) {
        obj.setAttributeInternal(index(), value);
      }
    }
    ;
    private static AttributesEnum[] vals = null;
    private static final int firstIndex = 0;

    public abstract Object get(RequestlistViewRowImpl object);

    public abstract void put(RequestlistViewRowImpl object, Object value);

    public int index() {
      return AttributesEnum.firstIndex() + ordinal();
    }

    public static final int firstIndex() {
      return firstIndex;
    }

    public static int count() {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    public static final AttributesEnum[] staticValues() {
      if (vals == null) {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }


  public static final int REQUESTID = AttributesEnum.requestId.index();
  public static final int ITEMID = AttributesEnum.itemId.index();
  public static final int TYPEOFREQID = AttributesEnum.typeOfReqId.index();
  public static final int TYPEOFREQNAME = AttributesEnum.typeOfReqName.index();
  public static final int TYPEOFREQ = AttributesEnum.typeOfReq.index();
  public static final int REQUESTORID = AttributesEnum.requestorId.index();
  public static final int APPROVERID = AttributesEnum.approverId.index();
  public static final int REASONFORREQUEST = AttributesEnum.reasonForRequest.index();
  public static final int REASONFORREJECTION = AttributesEnum.reasonForRejection.index();
  public static final int STATUS = AttributesEnum.status.index();
  public static final int CREATEDATE = AttributesEnum.createDate.index();
  public static final int UPDATEDATE = AttributesEnum.updateDate.index();
  public static final int DESIGNATION = AttributesEnum.Designation.index();
  public static final int REQUESTDAYS = AttributesEnum.RequestDays.index();
  public static final int STATUSORDER = AttributesEnum.statusOrder.index();
  public static final int GUIDELINETITLE = AttributesEnum.GuidelineTitle.index();
  public static final int REFNUM = AttributesEnum.RefNum.index();
  public static final int REQUESTORNAME = AttributesEnum.RequestorName.index();
  public static final int REQUESTORDEPARTMENTID = AttributesEnum.RequestorDepartmentId.index();
  public static final int REQUESTORDEPARTMENTNAME = AttributesEnum.RequestorDepartmentName.index();
  public static final int SUPPDOCFILENAMEORIG = AttributesEnum.suppDocfilenameOrig.index();
  public static final int SUPPDOCFILENAMESTORE = AttributesEnum.suppDocfilenameStore.index();
  public static final int DESIGNATIONNAME = AttributesEnum.DesignationName.index();
  public static final int POLICYVIEW = AttributesEnum.PolicyView.index();
  public static final int INTERNALUSERVIEW = AttributesEnum.InternaluserView.index();
  public static final int ATTACHEDFILEVIEW = AttributesEnum.AttachedfileView.index();
  public static final int LOOKUPPROPERTIESVIEW = AttributesEnum.LookuppropertiesView.index();

  /**
   * This is the default constructor (do not remove).
   */
  public RequestlistViewRowImpl() {
  }

  /**
   * Gets Requestlist entity object.
   * @return the Requestlist
   */
  public EntityImpl getRequestlist() {
    return (EntityImpl)getEntity(0);
  }

  /**
   * Gets the attribute value for requestId using the alias name requestId.
   * @return the requestId
   */
  public String getrequestId() {
    return (String) getAttributeInternal(REQUESTID);
  }

  /**
   * Sets <code>value</code> as attribute value for requestId using the alias name requestId.
   * @param value value to set the requestId
   */
  public void setrequestId(String value) {
    setAttributeInternal(REQUESTID, value);
  }

  /**
   * Gets the attribute value for itemId using the alias name itemId.
   * @return the itemId
   */
  public String getitemId() {
    return (String) getAttributeInternal(ITEMID);
  }

  /**
   * Sets <code>value</code> as attribute value for itemId using the alias name itemId.
   * @param value value to set the itemId
   */
  public void setitemId(String value) {
    setAttributeInternal(ITEMID, value);
  }

  /**
   * Gets the attribute value for typeOfReqId using the alias name typeOfReqId.
   * @return the typeOfReqId
   */
  public String gettypeOfReqId() {
    return (String) getAttributeInternal(TYPEOFREQID);
  }

  /**
   * Sets <code>value</code> as attribute value for typeOfReqId using the alias name typeOfReqId.
   * @param value value to set the typeOfReqId
   */
  public void settypeOfReqId(String value) {
    setAttributeInternal(TYPEOFREQID, value);
  }

  /**
   * Gets the attribute value for typeOfReqName using the alias name typeOfReqName.
   * @return the typeOfReqName
   */
  public String gettypeOfReqName() {
    return (String) getAttributeInternal(TYPEOFREQNAME);
  }

  /**
   * Sets <code>value</code> as attribute value for typeOfReqName using the alias name typeOfReqName.
   * @param value value to set the typeOfReqName
   */
  public void settypeOfReqName(String value) {
    setAttributeInternal(TYPEOFREQNAME, value);
  }

  /**
   * Gets the attribute value for typeOfReq using the alias name typeOfReq.
   * @return the typeOfReq
   */
  public String gettypeOfReq() {
    return (String) getAttributeInternal(TYPEOFREQ);
  }

  /**
   * Sets <code>value</code> as attribute value for typeOfReq using the alias name typeOfReq.
   * @param value value to set the typeOfReq
   */
  public void settypeOfReq(String value) {
    setAttributeInternal(TYPEOFREQ, value);
  }

  /**
   * Gets the attribute value for requestorId using the alias name requestorId.
   * @return the requestorId
   */
  public String getrequestorId() {
    return (String) getAttributeInternal(REQUESTORID);
  }

  /**
   * Sets <code>value</code> as attribute value for requestorId using the alias name requestorId.
   * @param value value to set the requestorId
   */
  public void setrequestorId(String value) {
    setAttributeInternal(REQUESTORID, value);
  }

  /**
   * Gets the attribute value for approverId using the alias name approverId.
   * @return the approverId
   */
  public String getapproverId() {
    return (String) getAttributeInternal(APPROVERID);
  }

  /**
   * Sets <code>value</code> as attribute value for approverId using the alias name approverId.
   * @param value value to set the approverId
   */
  public void setapproverId(String value) {
    setAttributeInternal(APPROVERID, value);
  }

  /**
   * Gets the attribute value for reasonForRequest using the alias name reasonForRequest.
   * @return the reasonForRequest
   */
  public String getreasonForRequest() {
    return (String) getAttributeInternal(REASONFORREQUEST);
  }

  /**
   * Sets <code>value</code> as attribute value for reasonForRequest using the alias name reasonForRequest.
   * @param value value to set the reasonForRequest
   */
  public void setreasonForRequest(String value) {
    setAttributeInternal(REASONFORREQUEST, value);
  }

  /**
   * Gets the attribute value for reasonForRejection using the alias name reasonForRejection.
   * @return the reasonForRejection
   */
  public String getreasonForRejection() {
    return (String) getAttributeInternal(REASONFORREJECTION);
  }

  /**
   * Sets <code>value</code> as attribute value for reasonForRejection using the alias name reasonForRejection.
   * @param value value to set the reasonForRejection
   */
  public void setreasonForRejection(String value) {
    setAttributeInternal(REASONFORREJECTION, value);
  }

  /**
   * Gets the attribute value for status using the alias name status.
   * @return the status
   */
  public String getstatus() {
    return (String) getAttributeInternal(STATUS);
  }

  /**
   * Sets <code>value</code> as attribute value for status using the alias name status.
   * @param value value to set the status
   */
  public void setstatus(String value) {
    setAttributeInternal(STATUS, value);
  }

  /**
   * Gets the attribute value for createDate using the alias name createDate.
   * @return the createDate
   */
  public Timestamp getcreateDate() {
    return (Timestamp) getAttributeInternal(CREATEDATE);
  }

  /**
   * Sets <code>value</code> as attribute value for createDate using the alias name createDate.
   * @param value value to set the createDate
   */
  public void setcreateDate(Timestamp value) {
    setAttributeInternal(CREATEDATE, value);
  }

  /**
   * Gets the attribute value for updateDate using the alias name updateDate.
   * @return the updateDate
   */
  public Timestamp getupdateDate() {
    return (Timestamp) getAttributeInternal(UPDATEDATE);
  }

  /**
   * Sets <code>value</code> as attribute value for updateDate using the alias name updateDate.
   * @param value value to set the updateDate
   */
  public void setupdateDate(Timestamp value) {
    setAttributeInternal(UPDATEDATE, value);
  }

  /**
   * Gets the attribute value for the calculated attribute GuidelineTitle.
   * @return the GuidelineTitle
   */
  public String getGuidelineTitle() {
    return (String) getAttributeInternal(GUIDELINETITLE);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute GuidelineTitle.
   * @param value value to set the  GuidelineTitle
   */
  public void setGuidelineTitle(String value) {
    setAttributeInternal(GUIDELINETITLE, value);
  }

  /**
   * Gets the attribute value for the calculated attribute RefNum.
   * @return the RefNum
   */
  public String getRefNum() {
    return (String) getAttributeInternal(REFNUM);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute RefNum.
   * @param value value to set the  RefNum
   */
  public void setRefNum(String value) {
    setAttributeInternal(REFNUM, value);
  }

  /**
   * Gets the attribute value for the calculated attribute RequestorName.
   * @return the RequestorName
   */
  public String getRequestorName() {
    return (String) getAttributeInternal(REQUESTORNAME);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute RequestorName.
   * @param value value to set the  RequestorName
   */
  public void setRequestorName(String value) {
    setAttributeInternal(REQUESTORNAME, value);
  }

  /**
   * Gets the attribute value for the calculated attribute RequestorDepartmentId.
   * @return the RequestorDepartmentId
   */
  public String getRequestorDepartmentId() {
    return (String) getAttributeInternal(REQUESTORDEPARTMENTID);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute RequestorDepartmentId.
   * @param value value to set the  RequestorDepartmentId
   */
  public void setRequestorDepartmentId(String value) {
    setAttributeInternal(REQUESTORDEPARTMENTID, value);
  }

  /**
   * Gets the attribute value for Designation using the alias name Designation.
   * @return the Designation
   */
  public String getDesignation() {
    return (String) getAttributeInternal(DESIGNATION);
  }

  /**
   * Sets <code>value</code> as attribute value for Designation using the alias name Designation.
   * @param value value to set the Designation
   */
  public void setDesignation(String value) {
    setAttributeInternal(DESIGNATION, value);
  }

  /**
   * Gets the attribute value for the calculated attribute RequestDays.
   * @return the RequestDays
   */
  public Integer getRequestDays() {
    return (Integer) getAttributeInternal(REQUESTDAYS);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute RequestDays.
   * @param value value to set the  RequestDays
   */
  public void setRequestDays(Integer value) {
    setAttributeInternal(REQUESTDAYS, value);
  }

    /**
     * Gets the attribute value for the calculated attribute statusOrder.
     * @return the statusOrder
     */
    public String getstatusOrder() {
        return (String) getAttributeInternal(STATUSORDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute statusOrder.
     * @param value value to set the  statusOrder
     */
    public void setstatusOrder(String value) {
        setAttributeInternal(STATUSORDER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RequestorDepartmentName.
     * @return the RequestorDepartmentName
     */
  public String getRequestorDepartmentName() {
    return (String) getAttributeInternal(REQUESTORDEPARTMENTNAME);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute RequestorDepartmentName.
   * @param value value to set the  RequestorDepartmentName
   */
  public void setRequestorDepartmentName(String value) {
    setAttributeInternal(REQUESTORDEPARTMENTNAME, value);
  }

  /**
   * Gets the attribute value for the calculated attribute suppDocfilenameOrig.
   * @return the suppDocfilenameOrig
   */
  public String getsuppDocfilenameOrig() {
    return (String) getAttributeInternal(SUPPDOCFILENAMEORIG);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute suppDocfilenameOrig.
   * @param value value to set the  suppDocfilenameOrig
   */
  public void setsuppDocfilenameOrig(String value) {
    setAttributeInternal(SUPPDOCFILENAMEORIG, value);
  }

  /**
   * Gets the attribute value for the calculated attribute suppDocfilenameStore.
   * @return the suppDocfilenameStore
   */
  public String getsuppDocfilenameStore() {
    return (String) getAttributeInternal(SUPPDOCFILENAMESTORE);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute suppDocfilenameStore.
   * @param value value to set the  suppDocfilenameStore
   */
  public void setsuppDocfilenameStore(String value) {
    setAttributeInternal(SUPPDOCFILENAMESTORE, value);
  }

  /**
   * Gets the attribute value for the calculated attribute DesignationName.
   * @return the DesignationName
   */
  public String getDesignationName() {
    return (String) getAttributeInternal(DESIGNATIONNAME);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute DesignationName.
   * @param value value to set the  DesignationName
   */
  public void setDesignationName(String value) {
    setAttributeInternal(DESIGNATIONNAME, value);
  }

  /**
   * Gets the associated <code>Row</code> using master-detail link PolicyView.
   */
  public Row getPolicyView() {
    return (Row)getAttributeInternal(POLICYVIEW);
  }

  /**
   * Sets the master-detail link PolicyView between this object and <code>value</code>.
   */
  public void setPolicyView(Row value) {
    setAttributeInternal(POLICYVIEW, value);
  }

  /**
   * Gets the associated <code>Row</code> using master-detail link InternaluserView.
   */
  public Row getInternaluserView() {
    return (Row)getAttributeInternal(INTERNALUSERVIEW);
  }

  /**
   * Sets the master-detail link InternaluserView between this object and <code>value</code>.
   */
  public void setInternaluserView(Row value) {
    setAttributeInternal(INTERNALUSERVIEW, value);
  }


  /**
   * Gets the associated <code>Row</code> using master-detail link AttachedfileView.
   */
  public Row getAttachedfileView() {
    return (Row)getAttributeInternal(ATTACHEDFILEVIEW);
  }

  /**
   * Sets the master-detail link AttachedfileView between this object and <code>value</code>.
   */
  public void setAttachedfileView(Row value) {
    setAttributeInternal(ATTACHEDFILEVIEW, value);
  }

  /**
   * Gets the associated <code>Row</code> using master-detail link LookuppropertiesView.
   */
  public Row getLookuppropertiesView() {
    return (Row)getAttributeInternal(LOOKUPPROPERTIESVIEW);
  }

  /**
   * Sets the master-detail link LookuppropertiesView between this object and <code>value</code>.
   */
  public void setLookuppropertiesView(Row value) {
    setAttributeInternal(LOOKUPPROPERTIESVIEW, value);
  }

  /**
   * getAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param attrDef the attribute

   * @return the attribute value
   * @throws Exception
   */
  protected Object getAttrInvokeAccessor(int index,
                                         AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

  /**
   * setAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param value the value to assign to the attribute
   * @param attrDef the attribute

   * @throws Exception
   */
  protected void setAttrInvokeAccessor(int index, Object value,
                                       AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }
}
