package gov.bnm.rh.views;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Dec 04 15:53:27 SGT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ExternaluserorganizationViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        USERID {
            public Object get(ExternaluserorganizationViewRowImpl obj) {
                return obj.getUSERID();
            }

            public void put(ExternaluserorganizationViewRowImpl obj,
                            Object value) {
                obj.setUSERID((String)value);
            }
        }
        ,
        ORGID {
            public Object get(ExternaluserorganizationViewRowImpl obj) {
                return obj.getORGID();
            }

            public void put(ExternaluserorganizationViewRowImpl obj,
                            Object value) {
                obj.setORGID((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(ExternaluserorganizationViewRowImpl object);

        public abstract void put(ExternaluserorganizationViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int USERID = AttributesEnum.USERID.index();
    public static final int ORGID = AttributesEnum.ORGID.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ExternaluserorganizationViewRowImpl() {
    }

    /**
     * Gets Externaluserorganization entity object.
     * @return the Externaluserorganization
     */
    public EntityImpl getExternaluserorganization() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for USERID using the alias name USERID.
     * @return the USERID
     */
    public String getUSERID() {
        return (String) getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as attribute value for USERID using the alias name USERID.
     * @param value value to set the USERID
     */
    public void setUSERID(String value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for ORGID using the alias name ORGID.
     * @return the ORGID
     */
    public String getORGID() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORGID using the alias name ORGID.
     * @param value value to set the ORGID
     */
    public void setORGID(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
