package gov.bnm.rh.views;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 15 22:15:26 SGT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PolicyIssuringDepartPartitionViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        issuringDepartId {
            public Object get(PolicyIssuringDepartPartitionViewRowImpl obj) {
                return obj.getissuringDepartId();
            }

            public void put(PolicyIssuringDepartPartitionViewRowImpl obj,
                            Object value) {
                obj.setissuringDepartId((String)value);
            }
        }
        ,
        itemId {
            public Object get(PolicyIssuringDepartPartitionViewRowImpl obj) {
                return obj.getitemId();
            }

            public void put(PolicyIssuringDepartPartitionViewRowImpl obj,
                            Object value) {
                obj.setitemId((String)value);
            }
        }
        ,
        IssuringDepartmentName {
            public Object get(PolicyIssuringDepartPartitionViewRowImpl obj) {
                return obj.getIssuringDepartmentName();
            }

            public void put(PolicyIssuringDepartPartitionViewRowImpl obj,
                            Object value) {
                obj.setIssuringDepartmentName((String)value);
            }
        }
        ,
        IssuringDepartmentView {
            public Object get(PolicyIssuringDepartPartitionViewRowImpl obj) {
                return obj.getIssuringDepartmentView();
            }

            public void put(PolicyIssuringDepartPartitionViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(PolicyIssuringDepartPartitionViewRowImpl object);

        public abstract void put(PolicyIssuringDepartPartitionViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ISSURINGDEPARTID = AttributesEnum.issuringDepartId.index();
    public static final int ITEMID = AttributesEnum.itemId.index();
    public static final int ISSURINGDEPARTMENTNAME = AttributesEnum.IssuringDepartmentName.index();
    public static final int ISSURINGDEPARTMENTVIEW = AttributesEnum.IssuringDepartmentView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PolicyIssuringDepartPartitionViewRowImpl() {
    }

    /**
     * Gets PolicyIssuringDepartPartitio1 entity object.
     * @return the PolicyIssuringDepartPartitio1
     */
    public EntityImpl getPolicyIssuringDepartPartitio1() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for issuringDepartId using the alias name issuringDepartId.
     * @return the issuringDepartId
     */
    public String getissuringDepartId() {
        return (String) getAttributeInternal(ISSURINGDEPARTID);
    }

    /**
     * Sets <code>value</code> as attribute value for issuringDepartId using the alias name issuringDepartId.
     * @param value value to set the issuringDepartId
     */
    public void setissuringDepartId(String value) {
        setAttributeInternal(ISSURINGDEPARTID, value);
    }

    /**
     * Gets the attribute value for itemId using the alias name itemId.
     * @return the itemId
     */
    public String getitemId() {
        return (String) getAttributeInternal(ITEMID);
    }

    /**
     * Sets <code>value</code> as attribute value for itemId using the alias name itemId.
     * @param value value to set the itemId
     */
    public void setitemId(String value) {
        setAttributeInternal(ITEMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IssuringDepartmentName.
     * @return the IssuringDepartmentName
     */
    public String getIssuringDepartmentName() {
        return (String) getAttributeInternal(ISSURINGDEPARTMENTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IssuringDepartmentName.
     * @param value value to set the  IssuringDepartmentName
     */
    public void setIssuringDepartmentName(String value) {
        setAttributeInternal(ISSURINGDEPARTMENTNAME, value);
    }


    /**
     * Gets the associated <code>Row</code> using master-detail link IssuringDepartmentView.
     */
    public Row getIssuringDepartmentView() {
        return (Row)getAttributeInternal(ISSURINGDEPARTMENTVIEW);
    }

    /**
     * Sets the master-detail link IssuringDepartmentView between this object and <code>value</code>.
     */
    public void setIssuringDepartmentView(Row value) {
        setAttributeInternal(ISSURINGDEPARTMENTVIEW, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
