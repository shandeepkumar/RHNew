package gov.bnm.rh.views;

import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Oct 14 21:19:42 SGT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RelavantActViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        id {
            public Object get(RelavantActViewRowImpl obj) {
                return obj.getid();
            }

            public void put(RelavantActViewRowImpl obj, Object value) {
                obj.setid((String)value);
            }
        }
        ,
        relavantName {
            public Object get(RelavantActViewRowImpl obj) {
                return obj.getrelavantName();
            }

            public void put(RelavantActViewRowImpl obj, Object value) {
                obj.setrelavantName((String)value);
            }
        }
        ,
        PolicyRelavantActPartitionView {
            public Object get(RelavantActViewRowImpl obj) {
                return obj.getPolicyRelavantActPartitionView();
            }

            public void put(RelavantActViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(RelavantActViewRowImpl object);

        public abstract void put(RelavantActViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.id.index();
    public static final int RELAVANTNAME = AttributesEnum.relavantName.index();
    public static final int POLICYRELAVANTACTPARTITIONVIEW = AttributesEnum.PolicyRelavantActPartitionView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RelavantActViewRowImpl() {
    }

    /**
     * Gets RelavantAct entity object.
     * @return the RelavantAct
     */
    public EntityImpl getRelavantAct() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for id using the alias name id.
     * @return the id
     */
    public String getid() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for id using the alias name id.
     * @param value value to set the id
     */
    public void setid(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for relavantName using the alias name relavantName.
     * @return the relavantName
     */
    public String getrelavantName() {
        return (String) getAttributeInternal(RELAVANTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for relavantName using the alias name relavantName.
     * @param value value to set the relavantName
     */
    public void setrelavantName(String value) {
        setAttributeInternal(RELAVANTNAME, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link PolicyRelavantActPartitionView.
     */
    public RowIterator getPolicyRelavantActPartitionView() {
        return (RowIterator)getAttributeInternal(POLICYRELAVANTACTPARTITIONVIEW);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
