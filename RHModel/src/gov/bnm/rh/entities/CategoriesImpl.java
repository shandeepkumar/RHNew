package gov.bnm.rh.entities;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon May 12 20:17:56 SGT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CategoriesImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);

    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CategoryID {
            public Object get(CategoriesImpl obj) {
                return obj.getCategoryID();
            }

            public void put(CategoriesImpl obj, Object value) {
                obj.setCategoryID((BigDecimal)value);
            }
        }
        ,
        CategoryName {
            public Object get(CategoriesImpl obj) {
                return obj.getCategoryName();
            }

            public void put(CategoriesImpl obj, Object value) {
                obj.setCategoryName((String)value);
            }
        }
        ,
        CategoryDescription {
            public Object get(CategoriesImpl obj) {
                return obj.getCategoryDescription();
            }

            public void put(CategoriesImpl obj, Object value) {
                obj.setCategoryDescription((String)value);
            }
        }
        ,
        ParentNodeID {
            public Object get(CategoriesImpl obj) {
                return obj.getParentNodeID();
            }

            public void put(CategoriesImpl obj, Object value) {
                obj.setParentNodeID((BigDecimal)value);
            }
        }
        ,
        CreatedDate {
            public Object get(CategoriesImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(CategoriesImpl obj, Object value) {
                obj.setCreatedDate((Timestamp)value);
            }
        }
        ,
        LastUpdated {
            public Object get(CategoriesImpl obj) {
                return obj.getLastUpdated();
            }

            public void put(CategoriesImpl obj, Object value) {
                obj.setLastUpdated((Timestamp)value);
            }
        }
        ,
        EntryID {
            public Object get(CategoriesImpl obj) {
                return obj.getEntryID();
            }

            public void put(CategoriesImpl obj, Object value) {
                obj.setEntryID((Integer)value);
            }
        }
        ,
        isActive {
            public Object get(CategoriesImpl obj) {
                return obj.getisActive();
            }

            public void put(CategoriesImpl obj, Object value) {
                obj.setisActive((Boolean)value);
            }
        }
        ,
        isAllowToPublish {
            public Object get(CategoriesImpl obj) {
                return obj.getisAllowToPublish();
            }

            public void put(CategoriesImpl obj, Object value) {
                obj.setisAllowToPublish((Boolean)value);
            }
        }
        ,
        PolicyCount {
            public Object get(CategoriesImpl obj) {
                return obj.getPolicyCount();
            }

            public void put(CategoriesImpl obj, Object value) {
                obj.setPolicyCount((Integer)value);
            }
        }
        ,
        isCheckCategory {
            public Object get(CategoriesImpl obj) {
                return obj.getisCheckCategory();
            }

            public void put(CategoriesImpl obj, Object value) {
                obj.setisCheckCategory((Boolean)value);
            }
        }
        ,
        Policysectorcategory {
            public Object get(CategoriesImpl obj) {
                return obj.getPolicysectorcategory();
            }

            public void put(CategoriesImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Categories {
            public Object get(CategoriesImpl obj) {
                return obj.getCategories();
            }

            public void put(CategoriesImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ParentNodeIDCategories {
            public Object get(CategoriesImpl obj) {
                return obj.getParentNodeIDCategories();
            }

            public void put(CategoriesImpl obj, Object value) {
                obj.setParentNodeIDCategories((CategoriesImpl)value);
            }
        }
        ,
        Policycategoriespartition {
            public Object get(CategoriesImpl obj) {
                return obj.getPolicycategoriespartition();
            }

            public void put(CategoriesImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(CategoriesImpl object);

        public abstract void put(CategoriesImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CATEGORYID = AttributesEnum.CategoryID.index();
    public static final int CATEGORYNAME = AttributesEnum.CategoryName.index();
    public static final int CATEGORYDESCRIPTION = AttributesEnum.CategoryDescription.index();
    public static final int PARENTNODEID = AttributesEnum.ParentNodeID.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATED = AttributesEnum.LastUpdated.index();
    public static final int ENTRYID = AttributesEnum.EntryID.index();
    public static final int ISACTIVE = AttributesEnum.isActive.index();
    public static final int ISALLOWTOPUBLISH = AttributesEnum.isAllowToPublish.index();
    public static final int POLICYCOUNT = AttributesEnum.PolicyCount.index();
    public static final int ISCHECKCATEGORY = AttributesEnum.isCheckCategory.index();
    public static final int POLICYSECTORCATEGORY = AttributesEnum.Policysectorcategory.index();
    public static final int CATEGORIES = AttributesEnum.Categories.index();
    public static final int PARENTNODEIDCATEGORIES = AttributesEnum.ParentNodeIDCategories.index();
    public static final int POLICYCATEGORIESPARTITION = AttributesEnum.Policycategoriespartition.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CategoriesImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("gov.bnm.rh.entities.Categories");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for CategoryID, using the alias name CategoryID.
     * @return the CategoryID
     */
    public BigDecimal getCategoryID() {
        return (BigDecimal)getAttributeInternal(CATEGORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CategoryID.
     * @param value value to set the CategoryID
     */
    public void setCategoryID(BigDecimal value) {
        setAttributeInternal(CATEGORYID, value);
    }

    /**
     * Gets the attribute value for CategoryName, using the alias name CategoryName.
     * @return the CategoryName
     */
    public String getCategoryName() {
        return (String)getAttributeInternal(CATEGORYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for CategoryName.
     * @param value value to set the CategoryName
     */
    public void setCategoryName(String value) {
        setAttributeInternal(CATEGORYNAME, value);
    }

    /**
     * Gets the attribute value for CategoryDescription, using the alias name CategoryDescription.
     * @return the CategoryDescription
     */
    public String getCategoryDescription() {
        return (String)getAttributeInternal(CATEGORYDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for CategoryDescription.
     * @param value value to set the CategoryDescription
     */
    public void setCategoryDescription(String value) {
        setAttributeInternal(CATEGORYDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for ParentNodeID, using the alias name ParentNodeID.
     * @return the ParentNodeID
     */
    public BigDecimal getParentNodeID() {
        return (BigDecimal)getAttributeInternal(PARENTNODEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParentNodeID.
     * @param value value to set the ParentNodeID
     */
    public void setParentNodeID(BigDecimal value) {
        setAttributeInternal(PARENTNODEID, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdated, using the alias name LastUpdated.
     * @return the LastUpdated
     */
    public Timestamp getLastUpdated() {
        return (Timestamp)getAttributeInternal(LASTUPDATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdated.
     * @param value value to set the LastUpdated
     */
    public void setLastUpdated(Timestamp value) {
        setAttributeInternal(LASTUPDATED, value);
    }

    /**
     * Gets the attribute value for EntryID, using the alias name EntryID.
     * @return the EntryID
     */
    public Integer getEntryID() {
        return (Integer)getAttributeInternal(ENTRYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EntryID.
     * @param value value to set the EntryID
     */
    public void setEntryID(Integer value) {
        setAttributeInternal(ENTRYID, value);
    }

    /**
     * Gets the attribute value for isActive, using the alias name isActive.
     * @return the isActive
     */
    public Boolean getisActive() {
        return (Boolean)getAttributeInternal(ISACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for isActive.
     * @param value value to set the isActive
     */
    public void setisActive(Boolean value) {
        setAttributeInternal(ISACTIVE, value);
    }

    /**
     * Gets the attribute value for isAllowToPublish, using the alias name isAllowToPublish.
     * @return the isAllowToPublish
     */
    public Boolean getisAllowToPublish() {
        return (Boolean)getAttributeInternal(ISALLOWTOPUBLISH);
    }

    /**
     * Sets <code>value</code> as the attribute value for isAllowToPublish.
     * @param value value to set the isAllowToPublish
     */
    public void setisAllowToPublish(Boolean value) {
        setAttributeInternal(ISALLOWTOPUBLISH, value);
    }


    /**
     * Gets the attribute value for PolicyCount, using the alias name PolicyCount.
     * @return the PolicyCount
     */
    public Integer getPolicyCount() {
        return (Integer)getAttributeInternal(POLICYCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PolicyCount.
     * @param value value to set the PolicyCount
     */
    public void setPolicyCount(Integer value) {
        setAttributeInternal(POLICYCOUNT, value);
    }

    /**
     * Gets the attribute value for isCheckCategory, using the alias name isCheckCategory.
     * @return the isCheckCategory
     */
    public Boolean getisCheckCategory() {
        return (Boolean)getAttributeInternal(ISCHECKCATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for isCheckCategory.
     * @param value value to set the isCheckCategory
     */
    public void setisCheckCategory(Boolean value) {
        setAttributeInternal(ISCHECKCATEGORY, value);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
    public RowIterator getPolicysectorcategory() {
        return (RowIterator)getAttributeInternal(POLICYSECTORCATEGORY);
    }


  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
    public RowIterator getCategories() {
        return (RowIterator)getAttributeInternal(CATEGORIES);
    }

    /**
     * @return the associated entity CategoriesImpl.
     */
    public CategoriesImpl getParentNodeIDCategories() {
        return (CategoriesImpl)getAttributeInternal(PARENTNODEIDCATEGORIES);
    }

    /**
     * Sets <code>value</code> as the associated entity CategoriesImpl.
     */
    public void setParentNodeIDCategories(CategoriesImpl value) {
        setAttributeInternal(PARENTNODEIDCATEGORIES, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPolicycategoriespartition() {
        return (RowIterator)getAttributeInternal(POLICYCATEGORIESPARTITION);
    }

    /**
     * @param categoryID key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal categoryID) {
        return new Key(new Object[]{categoryID});
    }


}
